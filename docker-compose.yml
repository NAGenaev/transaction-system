version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: transactions
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
    - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
    - KAFKA_LISTENER_PORT=9092
    - KAFKA_LISTENER_NAME=PLAINTEXT
    - KAFKA_LISTENER=PLAINTEXT://0.0.0.0:9092
    - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://kafka:9092  # Указываем имя хоста, как указано в сервисе Kafka
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
    - KAFKA_LISTENER_NAME=PLAINTEXT

######## MONITORING ########
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
  api:
    restart: always
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - kafka

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    privileged: true
    ports:
      - "8089:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  kafka-exporter:
    image: danielqsj/kafka-exporter
    ports:
      - "9308:9308"
    environment:
      KAFKA_URI: kafka:9092
    command:
      - '--kafka.server=kafka:9092'

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/transactions?sslmode=disable"

  orchestrator:
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    container_name: orchestrator
    depends_on:
      - kafka
    restart: unless-stopped

  worker:
    restart: always
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    depends_on:
      - kafka

  kafka-ui:
    image: provectuslabs/kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=my-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092  # адрес kafka
      - KAFKA_SERVER=PLAINTEXT://kafka:9092
      - KAFKA_PROXY=true
    ports:
      - "8080:8080"

volumes:
  postgres-data:
  grafana-data:
  
