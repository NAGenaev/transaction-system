//—Ç–µ—Å—Ç –Ω–∞ 2 –º–ª–Ω —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–∑ –ø—É–ª–∞ 1 –º–ª–Ω –∫—Ä–µ—Å—Ç –Ω–∞ –∫—Ä–µ—Å—Ç
import http from 'k6/http';
import { check, sleep } from 'k6';

const startNumber = 40817810111322211n;
const totalTransactions = 2_000_000; // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–æ 2 –º–ª–Ω
const vus = 200;

export const options = {
  scenarios: {
    transactions: {
      executor: 'per-vu-iterations',
      vus: vus,
      iterations: totalTransactions / vus, // –¢–µ–ø–µ—Ä—å 10000 –∏—Ç–µ—Ä–∞—Ü–∏–π –Ω–∞ VU
      maxDuration: '120m', // –£–≤–µ–ª–∏—á–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    },
  },
  thresholds: {
    'http_req_duration': ['p(95)<1000'],
    'http_req_failed': ['rate<0.01'],
  },
  discardResponseBodies: true,
};

export default function () {
  const vuIterations = totalTransactions / vus;
  const globalIndex = BigInt((__VU - 1) * vuIterations + __ITER);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥—É–ª—å –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (1 –º–ª–Ω),
  // —á—Ç–æ–±—ã –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–æ–≤ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å –≤ —Ç–æ–º –∂–µ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
  const modIndex = globalIndex % BigInt(1_000_000);
  
  const sender = (startNumber + modIndex).toString();
  const receiver = (startNumber + BigInt(1_000_000 - 1) - modIndex).toString();

  const amount = 1;

  const payload = JSON.stringify({
    sender_account: sender,
    receiver_account: receiver,
    amount: amount,
  });

  const res = http.post('http://localhost:8000/transactions/', payload, {
    headers: { 'Content-Type': 'application/json' },
    timeout: '30s',
  });

  check(res, {
    'üì¶ —Å—Ç–∞—Ç—É—Å 200': (r) => r.status === 200,
  });

  if (res.status !== 200) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${res.status} ‚Üí ${payload}`);
  }

  sleep(0.001);
}